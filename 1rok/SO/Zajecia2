#!/usr/bin/perl -w
.pl 

zmienne trech typow:

1) skalarne:
      $x = "Kot"  - prosta zmienna (liczba, napis)
2) tablice: 
      @tab - tablica
      $x = $tab[0] - przypisanie
      $x = @tab - przypisanie dlugosci tablicy
3) tablice haszujace (asocjacyjne):
      %tr
      $x = %th - przypisanie dlugosci
      @tab = %th - przypisanie 

'$x' - print $x
"$x" - print x
"$x\$" - print x$

@ARGV - zbior argumentow
@ARGV[0] - zwracanie do pierwszego elementu 

'>' - do zapisu
'<' - do odczytu 

open(p, '<', $plik) - otworzyc plik, dalej korzystamy z nazwy p zamiast plik.txt
$l = <p> - odczytanie linijki 

foreach $plik(@ARGV) {
    open(p, '<', $plik);
    @linia = <p>;
    print $linia1;
}

if (tekst =~ /wzorzec/) ... - wyszukiwanie w tekscie

\t, \n, . - tabulator, nowa linia, dowolny znak poza \n
\s, \S - dowolny znak odstępu, dowolny znak nie będący odstępem
\w, \W - dowolna cyfra lub litera, dowolny znak nie będący cyfrą ani literą
^, $ - początek tekstu, koniec tekstu

_* - cos napisane przed * moze sie powtorzyc (od 0 do nieskonczonosci)
_+ - od 1 do nieskonczonosci
_{3, 5} - ograniczenie
_? - od 0 do 1

[] - zakres znaku

"-?[1-9][0-9]*"
1) albo minus na poczatku, albo nic 
2) liczba z zakresu 1-9
3) dowolna ilosc liczb z zakresu 1-9 (gwiazdka odnosi sie do ostatnich nawiasow)
 przyklad: 
 -24657
 135
 -4 

 =~g/"..."/ - wyszukiwanie wszystkich wystapien 
 =~g/"..."/i - szukamy elementow nie patrzac na ich wielkosc

 "..." mozna zapisac jako m/.../ 
 
 . - dowolny znak
 \. - kropka

 "^[\w._-]+@[\w._-]+\.[a-zA-Z]{2,}$" - podany tekst jest adresem e-mail
 1) poczatek - koniec ^$
 2) dowolna litera lub . - _ - ninimum 1 raz
 3) @
 4) dowolna litera lub . - _ - ninimum 1 raz
 5) kropka
 6) litery wystepujce minimum 2 razy


